#!/sbin/runscript
# Copyright 1999-2015 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

extra_commands="dumpcfg"
extra_started_commands="reload short detailed"

description="Scans log files and bans IPs that show malicious signs"
description_dumpcfg="dump configuration. For debugging"
description_reload="reloads the configuration"
description_short="short status"
description_detailed="detailed status about all jails"

: ${pidfile:=/run/fail2ban/fail2ban.pid}
: ${FAIL2BAN_SOCKFILE:=/run/fail2ban/fail2ban.sock}
: ${FAIL2BAN_CONFDIR:=/etc/fail2ban}
FAIL2BAN_OPTIONS="-c '${FAIL2BAN_CONFDIR}' -s '${FAIL2BAN_SOCKFILE}' -p '${pidfile}'"

required_files="${FAIL2BAN_CONFDIR}/fail2ban.conf"
command="/usr/bin/fail2ban-client"
command_args="${FAIL2BAN_OPTIONS} -b -x start"

depend() {
    need net logger iptables
}

start_pre() {
    mkdir -p "$(dirname "${pidfile}")" "$(dirname "${FAIL2BAN_SOCKFILE}")"
}

stop() {
    ebegin "Stopping fail2ban"
    eval ${command} ${FAIL2BAN_OPTIONS} stop
    eend $? "Failed to stop fail2ban"
}

reload() {
    ebegin "Reloading fail2ban"
    eval ${command} ${FAIL2BAN_OPTIONS} reload
    eend $? "Failed to reload fail2ban"
}

dumpcfg(){
    eval ${command} ${FAIL2BAN_OPTIONS} -d
}

short(){
    LANG= eval ${command} ${FAIL2BAN_OPTIONS} status
}

detailed(){
    local _j
    for _j in $(short | sed -e 's/,//g' -nre 's/\S\S Jail list:[[:space:]]+(.*)$/\1/p'); do
        eval ${command} ${FAIL2BAN_OPTIONS} status $_j
    done
}
